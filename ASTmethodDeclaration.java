/* Generated By:JJTree: Do not edit this line. ASTmethodDeclaration.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTmethodDeclaration extends SimpleNode {
    public ASTmethodDeclaration(int id) {
        super(id);
    }

    public ASTmethodDeclaration(JmmParser p, int id) {
        super(p, id);
    }

    public void createSymbolTable(SymbolTable table) {
        ASTtype typeNode = (ASTtype) children[0];
        SymbolTable methodTable = new SymbolTable(table, typeNode.getType());
        JmmParser.getInstance().addMethod(((SimpleNode)children[1]).name, methodTable);

        if (children == null) return;

        for (int i = 0; i < children.length; i++) {
            ((SimpleNode) children[i]).createSymbolTable(methodTable);
        }
    }

    public void applySemanticAnalysis(SymbolTable table) {
        SymbolTable methodTable = JmmParser.getInstance().getMethods().get(((SimpleNode)children[1]).name);

        if (children == null) return;

        for (int i = 0; i < children.length; i++) {
            ((SimpleNode) children[i]).applySemanticAnalysis(methodTable);
        }
    }
}
/* JavaCC - OriginalChecksum=b04f5b8076581ed0e56b5afc5b9be9b0 (do not edit this line) */
