/* Generated By:JJTree&JavaCC: Do not edit this line. JmmParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface JmmParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER = 5;
  /** RegularExpression Id. */
  int CLASS = 6;
  /** RegularExpression Id. */
  int EXTENDS = 7;
  /** RegularExpression Id. */
  int LEFTBRACKET = 8;
  /** RegularExpression Id. */
  int RIGHTBRACKET = 9;
  /** RegularExpression Id. */
  int LEFTPARENTHESES = 10;
  /** RegularExpression Id. */
  int RIGHTPARENTHESES = 11;
  /** RegularExpression Id. */
  int LEFTSQUAREBRACKET = 12;
  /** RegularExpression Id. */
  int RIGHTSQUAREBRACKET = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int BOOLEAN = 15;
  /** RegularExpression Id. */
  int STRINGARRAY = 16;
  /** RegularExpression Id. */
  int VOID = 17;
  /** RegularExpression Id. */
  int COLON = 18;
  /** RegularExpression Id. */
  int DOT = 19;
  /** RegularExpression Id. */
  int SEMICOLON = 20;
  /** RegularExpression Id. */
  int PUBLIC = 21;
  /** RegularExpression Id. */
  int STATIC = 22;
  /** RegularExpression Id. */
  int MAIN = 23;
  /** RegularExpression Id. */
  int IF = 24;
  /** RegularExpression Id. */
  int ELSE = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int RETURN = 27;
  /** RegularExpression Id. */
  int EQUALS = 28;
  /** RegularExpression Id. */
  int COMMERCIALE = 29;
  /** RegularExpression Id. */
  int MINOR = 30;
  /** RegularExpression Id. */
  int PLUS = 31;
  /** RegularExpression Id. */
  int MINUS = 32;
  /** RegularExpression Id. */
  int ASTERISC = 33;
  /** RegularExpression Id. */
  int SLASH = 34;
  /** RegularExpression Id. */
  int LENGTH = 35;
  /** RegularExpression Id. */
  int TRUE = 36;
  /** RegularExpression Id. */
  int FALSE = 37;
  /** RegularExpression Id. */
  int THIS = 38;
  /** RegularExpression Id. */
  int NEW = 39;
  /** RegularExpression Id. */
  int EXCLAMATION = 40;
  /** RegularExpression Id. */
  int IDENTIFIER = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "<INTEGER>",
    "\"class\"",
    "\"extends\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"int\"",
    "\"boolean\"",
    "\"String[]\"",
    "\"void\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\"public\"",
    "\"static\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"return\"",
    "\"=\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"length\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"!\"",
    "<IDENTIFIER>",
  };

}
